// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "price.proto" (package "yarsha.solana.price", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PriceService } from "./price";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PriceUpdate } from "./price";
import type { PriceRequest } from "./price";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service yarsha.solana.price.PriceService
 */
export interface IPriceServiceClient {
    /**
     * @generated from protobuf rpc: PriceUpdates(yarsha.solana.price.PriceRequest) returns (stream yarsha.solana.price.PriceUpdate);
     */
    priceUpdates(input: PriceRequest, options?: RpcOptions): ServerStreamingCall<PriceRequest, PriceUpdate>;
}
/**
 * @generated from protobuf service yarsha.solana.price.PriceService
 */
export class PriceServiceClient implements IPriceServiceClient, ServiceInfo {
    typeName = PriceService.typeName;
    methods = PriceService.methods;
    options = PriceService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PriceUpdates(yarsha.solana.price.PriceRequest) returns (stream yarsha.solana.price.PriceUpdate);
     */
    priceUpdates(input: PriceRequest, options?: RpcOptions): ServerStreamingCall<PriceRequest, PriceUpdate> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PriceRequest, PriceUpdate>("serverStreaming", this._transport, method, opt, input);
    }
}
