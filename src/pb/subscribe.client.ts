// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "subscribe.proto" (package "yarsha.groupchat.subscribe.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SubscribeService } from "./subscribe";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SubscribeResponse } from "./subscribe";
import type { SubscribeRequest } from "./subscribe";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service yarsha.groupchat.subscribe.v1.SubscribeService
 */
export interface ISubscribeServiceClient {
    /**
     * @generated from protobuf rpc: SubscribeToGroupChat(yarsha.groupchat.subscribe.v1.SubscribeRequest) returns (yarsha.groupchat.subscribe.v1.SubscribeResponse);
     */
    subscribeToGroupChat(input: SubscribeRequest, options?: RpcOptions): UnaryCall<SubscribeRequest, SubscribeResponse>;
}
/**
 * @generated from protobuf service yarsha.groupchat.subscribe.v1.SubscribeService
 */
export class SubscribeServiceClient implements ISubscribeServiceClient, ServiceInfo {
    typeName = SubscribeService.typeName;
    methods = SubscribeService.methods;
    options = SubscribeService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: SubscribeToGroupChat(yarsha.groupchat.subscribe.v1.SubscribeRequest) returns (yarsha.groupchat.subscribe.v1.SubscribeResponse);
     */
    subscribeToGroupChat(input: SubscribeRequest, options?: RpcOptions): UnaryCall<SubscribeRequest, SubscribeResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SubscribeRequest, SubscribeResponse>("unary", this._transport, method, opt, input);
    }
}
